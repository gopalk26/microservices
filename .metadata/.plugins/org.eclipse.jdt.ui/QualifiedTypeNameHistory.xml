<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.batch.core.repository.JobExecutionAlreadyRunningException"/>
<fullyQualifiedTypeName name="javax.batch.operations.JobRestartException"/>
<fullyQualifiedTypeName name="org.springframework.aop.scope.ScopedProxyFactoryBean"/>
<fullyQualifiedTypeName name="org.springframework.batch.core.configuration.annotation.JobScope"/>
<fullyQualifiedTypeName name="lombok.Value"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="org.springframework.batch.item.file.transform.LineTokenizer"/>
<fullyQualifiedTypeName name="org.springframework.batch.item.file.transform.FieldSet"/>
<fullyQualifiedTypeName name="org.springframework.batch.core.launch.support.RunIdIncrementer"/>
<fullyQualifiedTypeName name="java.net.BindException"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.bind.BindException"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="javax.batch.api.chunk.ItemProcessor"/>
<fullyQualifiedTypeName name="org.springframework.batch.item.ItemProcessor"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
<fullyQualifiedTypeName name="org.springframework.batch.core.configuration.annotation.StepScope"/>
<fullyQualifiedTypeName name="jakarta.persistence.Id"/>
<fullyQualifiedTypeName name="jakarta.annotation.Generated"/>
<fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.demoSpringData.repository.CourceRepository"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="com.demoSpringData.entity.Cource"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
<fullyQualifiedTypeName name="com.demoSpringData.service.CourceService"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="de.codecentric.boot.admin.server.config.EnableAdminServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.example.client.WelcomeApiClient"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
</qualifiedTypeNameHistroy>
